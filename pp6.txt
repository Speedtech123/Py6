#6a lab program to implement array manipulation on numpy 
import numpy as np 
#cretaion of 2d array 
arr = np.array([[1, 2, 3], [4, 5, 6]]) 
print(arr) 
#cretaion of 3d array 
arrr = np.array([[[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [4, 5, 6]]]) 
print(arrr) 
#searching with index 
print('2nd element on 1st row: ', arr[0, 1]) 
print('Last element from 2nd dim: ', arr[1, -1]) 
#indexing of 3d array 
print(arrr[0, 1, 2]) 
print(arrr[1, 1:4]) 
#slicing 
print(arrr[1:5:2]) 
print(arrr[0:2, 1:4]) 
print(arrr[::2]) 
#sorting and searching 
ar = np.array([9,2,1,5,3,10,33,12,56,78,13,8,6]) 
print(ar) 
print(np.sort(ar)) 
x = np.searchsorted(ar, [2, 4, 6]) 
print(x) 
#reshaping 
arr = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]) 
newarr = arr.reshape(2, 3, 2) 
print(newarr) 
#splitting of array 
import numpy as np 
arr = np.array([[1, 2], [3, 4], [5, 6], [7, 8], [9, 10], [11, 12]]) 
newarr = np.array_split(arr, 3) 
print(newarr) 


6b) Broadcasting and Plotting NumPy arrays using matplotlib library. 
Program: 
import numpy as np 
import matplotlib.pyplot as plt 
# Computes x and y coordinates for 
# points on sine and cosine curves 
#trignometric broadcasting 
x = np.arange(0, 3 * np.pi, 0.1) 
y_sin = np.sin(x) 
y_cos = np.cos(x) 
# Plot the points using matplotlib 
plt.plot(x, y_sin) 
plt.plot(x, y_cos) 
plt.xlabel('x axis label') 
plt.ylabel('y axis label') 
Lab Manual for Python Programming Laboratory-22MCA207L 
plt.title('Sine and Cosine') 
plt.legend(['Sine', 'Cosine']) 
plt.show()